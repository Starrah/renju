#include "debugChessEvaluate.h"
#include "evaluate.h"

#define DEBUG_EVALUATE_ENABLE

/**
 * 在这里输入要估值的棋盘：input是一个vector，每个元素表示一个棋盘
 * 每个棋盘由16行字符串相加构成，前15行每一行字符串有15个数，分别代表每个棋子；
 * 最后一行只有一个数取值为1或2，表示**刚刚下过棋**的玩家。
 * 每个数取值0表示该位置无棋子，1表示黑棋，2表示白棋
 * 填写好这个input vector后直接运行程序即可在控制台看到每个棋盘的估值
 */
vector<string> input{
            string() +
            "000000000000000" +
            "000000000000000" +
            "000200000000000" +
            "000000002200000" +
            "000000000000000" +
            "000000000000000" +
            "000000011102000" +
            "000000000010000" +
            "000000000001000" +
            "000000000020000" +
            "000000000000000" +
            "000000002221000" +
            "000000002221000" +
            "000000000000000" +
            "000000000000000" +
            "1",

//            string() +
//            "000000000000000" +
//            "000000000000000" +
//            "000000000000000" +
//            "000000000000000" +
//            "000000000000000" +
//            "000000000000000" +
//            "000000000000000" +
//            "000000000000000" +
//            "000000000000000" +
//            "000000000000000" +
//            "000000000000000" +
//            "000000000000000" +
//            "000000000000000" +
//            "000000000000000" +
//            "000000000000000" +
//            "1",
//
//            string() +
//            "000000000000000" +
//            "000000000000000" +
//            "000000000000000" +
//            "000000000000000" +
//            "000000000000000" +
//            "000000000000000" +
//            "000000000000000" +
//            "000000000000000" +
//            "000000000000000" +
//            "000000000000000" +
//            "000000000000000" +
//            "000000000000000" +
//            "000000000000000" +
//            "000000000000000" +
//            "000000000000000" +
//            "1",
//
//            string() +
//            "000000000000000" +
//            "000000000000000" +
//            "000000000000000" +
//            "000000000000000" +
//            "000000000000000" +
//            "000000000000000" +
//            "000000000000000" +
//            "000000000000000" +
//            "000000000000000" +
//            "000000000000000" +
//            "000000000000000" +
//            "000000000000000" +
//            "000000000000000" +
//            "000000000000000" +
//            "000000000000000" +
//            "1",
//
};

void _convertInput(int result[GRID_NUM][GRID_NUM] , const string& str){
    for (int i = 0; i < 15 * 15; i++){
        int lineNo = (i / 15) + 1;
        int columnNo = (i % 15) + 1;
        result[lineNo][columnNo] = str[i] - '0';
    }
}

void DebugEvaluate(){
#if defined(_DEBUG) && defined (DEBUG_EVALUATE_ENABLE)
    for (const string& one: input) {
        int chessBoard[GRID_NUM][GRID_NUM];
        _convertInput(chessBoard, one);
        int player = one[15*15] - '0';
        double score = evaluate(chessBoard, player);
        cout << "DebugEvaluate: " << score << endl;
    }
#endif
}